/*  
Долженко Андрей
Èãðà "Äîì ñ ïðèâèäåíèÿìè"
Â èãðå íóæíî ïðîéòè òðè ýòàæà, ÷òîáû ïðèâèäåíèå íå çàìåòèëî. Åñëè ïðèâèäåíèå òåáÿ îáíàðóæèò, òî èãðîê òåðÿåò îäíó æèçíü.
Âñåãî 3 æèçíè.
Íà èãðîâîì ïîëå åñòü èíäèêàòîðû: LEVEL - ñ÷èòàåò êàæäóþ ïîïûòêó; HEART - ïîêàçûâàåò îñòàâøååñÿ êîëè÷åñòâî æèçíåé; FLOOR - ïîêàçûâàåò, íà êàêîì òû ýòàæå.
*/


#include<iostream>
#include<stdlib.h>
#include<time.h>

using namespace std;

void Name();

void Start(); // Çàñòàâêà

void Description();

void Choise();


void LeftDoorGhost();
void MiddleDoorGhost();
void RightDoorGhost();

void LeftDoorUser();
void MiddleDoorUser();
void RightDoorUser();

void Win();
void Loss();


int main()
{
	setlocale(LC_ALL, "ru");

	srand(time(NULL));

	char number;

	int start; // ïåðåìåííàÿ îñòàíàâëèâàåò ôóíêöèþ è ñïðàøèâàåò íóæíî ëè èäòè äàëüøå

	int level = 1; // îïðåäåëÿåò óðîâåíü èãðû

	int heart = 3; // îïðåäåëÿåò êîëè÷åñòâî æèçíåé

	int floor = 1;

	int ghost_choise; // îïðåäåëÿåò âûáîð äâåðè ïðèâèäåíèåì

	int user_choise; // îïðåäåëÿåò âûáîð äâåðè èãðîêîì

	// Çàïóñêàåòñÿ íàçâàíèå èãðû è çàñòàâêà
	
	Name();

	Start();

	cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

	

	switch (start)
	{
	case 1:
	{
		break;
	}

	case 2:
	{
		return 0;
	}

	default:
	{
		while (start != 1 && start != 2)
		{
			cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
			cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
		}
	}

	}

	system("cls");

	// çàïóñêàåòñÿ îïèñàíèå ñþæåòà 
	Name();
		
	Description();

	cout << "\n\n\t\t\tÏÐÎÄÎËÆÀÅÌ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

	switch (start)
	{
	case 1:
	{
		break;
	}

	case 2:
	{
		return 0;;
	}
	default:
	{
		while (start != 1 && start != 2)
		{
			cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
			cout << "\n\nÏÐÎÄÎËÆÀÅÌ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
		}
	}
	}

	// öèêë èãðû áóäåò ïîâòîðÿòñÿ, ïîêà êîëè÷åñòâî ñåðäåö íå ñòàíåò ðàâíî 0

	while (heart != 0 && floor != 4)
	{
		system("cls");
		
		Name();

		cout << "\n\tLEVEL : " << level << "\tHEART : " << heart << "\tFLOOR : " << floor << endl << endl << endl; // Ñòðîêà îòîáðàæàåò òåêóùèé óðîâåíü, êîëè÷åñòâî æèçíåé è ýòàæ, íà êîòîðîì íàõîäèòñÿ ãåðîé
		
		ghost_choise = rand() % 3 + 1; // Êîìïüþòåð âûáèðàåò äâåðü

		// cout << ghost_choise;

		cout << "\n\tÂûáåðèòå äâåðü, ÷òîáû íàéòè ïðèíöåññó!\n\n";

		Choise(); // îòîáðàæàþòñÿ âñå çàêðûòûå äâåðè

			   
		cout << "\n\tÂàø âûáîð - "; cin >> user_choise;
		
		(user_choise == ghost_choise) ? heart = heart - 1 : heart = heart;

		while (user_choise != 1 && user_choise != 2 && user_choise != 3) /////////////
		{
			cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
			cout << "\n\nÂûáåðèòå öèôðó 1 èëè 2 èëè 3\t"; cin >> user_choise;
		}

		if (user_choise != ghost_choise && user_choise == 1) // âûèãðàë þçåð è âûáðàë äâåðü 1
		{
			system("cls");
			
			Name();
			
			LeftDoorUser();

			cout << "\n\n\t\t\tÂÛ ÃÎÒÎÂÛ ÈÄÒÈ ÄÀËÜØÅ ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

			switch (start)
			{
			case 1:
			{
				break;
			}

			case 2:
			{
				return 0;;
			}
			default:
			{
				while (start != 1 && start != 2)
				{
					cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
					cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
				}
			}
			}


		}

		

		if (user_choise != ghost_choise && user_choise == 2) // âûèãðàë þçåð è âûáðàë äâåðü 2
		{
			system("cls");

			Name();

			MiddleDoorUser();

			cout << "\n\n\t\t\tÂÛ ÃÎÒÎÂÛ ÈÄÒÈ ÄÀËÜØÅ ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

			switch (start)
			{
			case 1:
			{
				break;
			}

			case 2:
			{
				return 0;;
			}
			default:
			{
				while (start != 1 && start != 2)
				{
					cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
					cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
				}
			}
			}
		}

		if (user_choise != ghost_choise && user_choise == 3) // âûèãðàë þçåð è âûáðàë äâåðü 3
		{
			system("cls");

			Name();

			RightDoorUser();

			cout << "\n\n\t\t\tÂÛ ÃÎÒÎÂÛ ÈÄÒÈ ÄÀËÜØÅ ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

			switch (start)
			{
			case 1:
			{
				break;
			}

			case 2:
			{
				return 0;;
			}
			default:
			{
				while (start != 1 && start != 2)
				{
					cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
					cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
				}
			}
			}
		}
		

		if (user_choise == ghost_choise && user_choise == 1) // þçåð âûáðàë äâåðü 1, íî âûèãðàëî ïðèâèäåíèå
		{
			system("cls");

			Name();

			LeftDoorGhost();

			cout << "\n\n\t\t\tÂÛ ÃÎÒÎÂÛ ÈÄÒÈ ÄÀËÜØÅ ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

			switch (start)
			{
			case 1:
			{
				break;
			}

			case 2:
			{
				return 0;;
			}
			default:
			{
				while (start != 1 && start != 2)
				{
					cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
					cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
				}
			}
			}
		}

		if (user_choise == ghost_choise && user_choise == 2) // þçåð âûáðàë äâåðü 2, íî âûèãðàëî ïðèâèäåíèå
		{
			system("cls");

			Name();

			MiddleDoorGhost();

			cout << "\n\n\t\t\tÂÛ ÃÎÒÎÂÛ ÈÄÒÈ ÄÀËÜØÅ ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

			switch (start)
			{
			case 1:
			{
				break;
			}

			case 2:
			{
				return 0;;
			}
			default:
			{
				while (start != 1 && start != 2)
				{
					cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
					cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
				}
			}
			}
		}

		if (user_choise == ghost_choise && user_choise == 3) // þçåð âûáðàë äâåðü 3, íî âûèãðàëî ïðèâèäåíèå
		{
			system("cls");

			Name();

			RightDoorGhost();

			cout << "\n\n\t\t\tÂÛ ÃÎÒÎÂÛ ÈÄÒÈ ÄÀËÜØÅ ?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;

			switch (start)
			{
			case 1:
			{
				break;
			}

			case 2:
			{
				return 0;;
			}
			default:
			{
				while (start != 1 && start != 2)
				{
					cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
					cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
				}
			}
			}
		}
			
		if (user_choise != ghost_choise)
		{
			floor += 1;
		}

		else if (user_choise != 1 && user_choise != 2 && user_choise != 3)
		{
				cout << "\nÂâåäåííûé ñèìâîë íåêîððåêòåí!!!\n\n";
				cout << "\n\nÂû ãîòîâû íà÷àòü?\tÄÀ - 1, \tÍÅÒ - 2 \t"; cin >> start;
		}
		
		
		level++; // èçìåíÿåòñÿ óðîâåíü ñ êàæäîé ïîïûòêîé

		

	}

	system("cls");
	
	// Çàâåðøåíèå èãðû: 

	Name();

	if (heart == 0) // åñëè êîí÷èëèñü æèçíè
	{
		cout << "\n\n\t\t\t!!! Ó ÂÀÑ ÊÎÍ×ÈËÈÑÜ ÆÈÇÍÈ !!!\n\n";
		cout << "\n\n\t\t\t    !!! ÂÛ ÏÐÎÈÃÐÀËÈ !!!\n\n";

		Loss();
	}

	else if (floor == 4) // åñëè ïðîéäåíû 3 ýòàæà
	{
		cout << "\n\t\t\t    !!! ÂÛ ÂÛÃÐÀËÈ !!!\n\n";
		cout << "\n\t\t\t!!! ÏÐÈÍÖÅÑÑÀ ÑÏÀÑÅÍÀ !!!\n\n";

		Win();

		cout << endl;
	}
	
	int konec;
	cin >> konec;

}


void Name()
{
	cout << "\n\n";
	cout << "\t\t **   *      **    **   *****\t\t*  *   **   *  *   **   ****\n";
	cout << "\t\t*  *  *     *  *  *  *  *****\t\t*  *  *  *  *  *  *  *  *   \n";
	cout << "\t\t*     *     *  *  *       *  \t\t*  *  *  *  *  *  *     *   \n";
	cout << "\t\t* **  ***   *  *   *      *  \t\t****  *  *  *  *   *    ****\n";
	cout << "\t\t*  *  *  *  *  *     *    *  \t\t*  *  *  *  *  *     *  *   \n";
	cout << "\t\t*  *  *  *  *  *  *  *    *  \t\t*  *  *  *  *  *  *  *  *   \n";
	cout << "\t\t **   *  *   **    **     *  \t\t*  *   **    **    **   ****\n";

	cout << endl << endl;
	cout << "\t---------------------------------------------------------------------------------\n\n\n";


}

void Start()
{
	cout << "\t                *************  \t\t*************  \t\t*************  \n";
	cout << "\t                *           ** \t\t*           ** \t\t*           ** \n";
	cout << "\t                *  ******   ***\t\t*           ***\t\t*           ***\n";
	cout << "\t                * * ** ** * ***\t\t*           ***\t\t*           ***\n";
	cout << "\t                * *   *   * ***\t\t*           ***\t\t*           ***\n";
	cout << "\t    ******      * * ,___, * ***\t\t*           ***\t\t*           ***\n";
	cout << "\t   * ** ** *    * *       * ***\t\t*           ***\t\t*           ***\n";
	cout << "\t   *   *   *    *   *****   ***\t\t*           ***\t\t*           ***\n";
	cout << "\t   * ,__, *     *    ***    ***\t\t*           ***\t\t*           ***\n";
	cout << "\t     ****       *      *    ***\t\t*           ***\t\t*           ***\n";
	cout << "\t    * ** *      *       *   ***\t\t*           ***\t\t*           ***\n";
	cout << "\t   *  **  *     *           ***\t\t*           ***\t\t*           ***\n";
	cout << "\t     *  *       ***************\t\t***************\t\t***************\n";
	cout << "\t    *    *                   **\t\t             **\t\t             **\n";
	cout << "\t                              *\t\t              *\t\t              *\n";

	cout << "\n\n\n";

	cout << "\t(c) Êîìïüþòåðíàÿ àêàäåìèÿ ØÀÃ. Âîðîíåæ\n";
	cout << "\t(c) Ñòàðèíèí Àíäðåé, Äîëæåíêî Àíäðåé\n";

}

void Description()
{
	cout << "\n\n\t\tÇëîé ÂÎËØÅÁÍÈÊ óêðàë ÏÐÈÍÖÅÑÑÓ è çàïåð åå íà ÷åðäàêå ÑÒÀÐÎÃÎ ÄÎÌÀ.\n";
	cout << "\n\t\t\tÂ äîìå ÒÐÈ ýòàæà! ÏÐÈÍÖÅÑÑÓ îõðàíÿåò ÏÐÈÂÈÄÅÍÈÅ.\n";
	cout << "\n\t\t\t  !!! Ïðîéäè ÂÑÅ ýòàæè è ÑÏÀÑÈ ÏÐÈÍÖÅÑÑÓ !!!.\n\n";
	cout << "\t---------------------------------------------------------------------------------\n\n\n";
}

void Choise()
{

	cout << "\n\n\n";

	cout << "\t                *************  \t\t*************  \t\t*************  \n";
	cout << "\t                ****** ******  \t\t****** ******  \t\t****** ******  \n";
	cout << "\t                ***** * *****  \t\t***** * *****  \t\t***** * *****  \n";
	cout << "\t                **** *** ****  \t\t**** *** ****  \t\t**** *** ****  \n";
	cout << "\t                *** ***** ***  \t\t*** ***** ***  \t\t*** ***** ***  \n";
	cout << "\t    ******      ** ******* **  \t\t** ******* **  \t\t** ******* **  \n";
	cout << "\t   * ** ** *    * **  ***** *  \t\t* **  ***** *  \t\t* **  ***** *  \n";
	cout << "\t   *   *   *    ** ******* **  \t\t** ******* **  \t\t** ******* **  \n";
	cout << "\t   * ,__, *     *** ***** ***  \t\t*** ***** ***  \t\t*** ***** ***  \n";
	cout << "\t     ****       **** *** ****  \t\t**** *** ****  \t\t**** *** ****  \n";
	cout << "\t    * ** *      ***** * *****  \t\t***** * *****  \t\t***** * *****  \n";
	cout << "\t   *  **  *     ****** ******  \t\t****** ******  \t\t****** ******  \n";
	cout << "\t     *  *       *************  \t\t*************  \t\t*************  \n";
	cout << "\t    *    *                     \t\t               \t\t               \n";
	cout << "\t                      1.       \t\t      2.       \t\t      3.       \n";

	cout << "\n\n";

}

void LeftDoorGhost()
{
	cout << "\n\n";

	cout << "\t\t\t !!! ÏÐÈÂÈÄÅÍÈÅ ÍÀÏÀËÎ ÍÀ ÂÀÑ !!!\n\n";
	cout << "\t\t\t  !!! ÂÛ ÏÎÒÅÐßËÈ ÎÄÍÓ ÆÈÇÍÜ !!!\n\n\n";

	cout << "\t                *************  \t\t*************  \t\t*************  \n";
	cout << "\t                *           ** \t\t****** ******  \t\t****** ******  \n";
	cout << "\t                *  ******   ***\t\t***** * *****  \t\t***** * *****  \n";
	cout << "\t                * * ** ** * ***\t\t**** *** ****  \t\t**** *** ****  \n";
	cout << "\t                * *   *   * ***\t\t*** ***** ***  \t\t*** ***** ***  \n";
	cout << "\t    ******      * * ,___, * ***\t\t** ******* **  \t\t** ******* **  \n";
	cout << "\t   * ** ** *    * *       * ***\t\t* **  ***** *  \t\t* **  ***** *  \n";
	cout << "\t   *   *   *    *   *****   ***\t\t** ******* **  \t\t** ******* **  \n";
	cout << "\t   * ,__, *     *    ***    ***\t\t*** ***** ***  \t\t*** ***** ***  \n";
	cout << "\t     ****       *      *    ***\t\t**** *** ****  \t\t**** *** ****  \n";
	cout << "\t    * ** *      *       *   ***\t\t***** * *****  \t\t***** * *****  \n";
	cout << "\t   *  **  *     *           ***\t\t****** ******  \t\t****** ******  \n";
	cout << "\t     *  *       ***************\t\t*************  \t\t*************  \n";
	cout << "\t    *    *                   **\t\t               \t\t               \n";
	cout << "\t                      1.      *\t\t      2.       \t\t      3.       \n";

	cout << "\n\n\n";

}

	void MiddleDoorGhost()
	{
		cout << "\n\n";

		cout << "\t\t\t !!! ÏÐÈÂÈÄÅÍÈÅ ÍÀÏÀËÎ ÍÀ ÂÀÑ !!!\n\n";
		cout << "\t\t\t  !!! ÂÛ ÏÎÒÅÐßËÈ ÎÄÍÓ ÆÈÇÍÜ !!!\n\n\n";

		cout << "\t                *************  \t\t*************  \t\t*************  \n";
		cout << "\t                ****** ******  \t\t*           ** \t\t****** ******  \n";
		cout << "\t                ***** * *****  \t\t*  ******   ***\t\t***** * *****  \n";
		cout << "\t                **** *** ****  \t\t* * ** ** * ***\t\t**** *** ****  \n";
		cout << "\t                *** ***** ***  \t\t* *   *   * ***\t\t*** ***** ***  \n";
		cout << "\t    ******      ** ******* **  \t\t* * ,___, * ***\t\t** ******* **  \n";
		cout << "\t   * ** ** *    * **  ***** *  \t\t* *       * ***\t\t* **  ***** *  \n";
		cout << "\t   *   *   *    ** ******* **  \t\t*   *****   ***\t\t** ******* **  \n";
		cout << "\t   * ,__, *     *** ***** ***  \t\t*    ***    ***\t\t*** ***** ***  \n";
		cout << "\t     ****       **** *** ****  \t\t*      *    ***\t\t**** *** ****  \n";
		cout << "\t    * ** *      ***** * *****  \t\t*       *   ***\t\t***** * *****  \n";
		cout << "\t   *  **  *     ****** ******  \t\t*           ***\t\t****** ******  \n";
		cout << "\t     *  *       *************  \t\t***************\t\t*************  \n";
		cout << "\t    *    *                     \t\t             **\t\t               \n";
		cout << "\t                      1.       \t\t      2.      *\t\t      3.       \n";

		cout << "\n\n\n";

	}

	void RightDoorGhost()
	{
		cout << "\n\n";

		cout << "\t\t\t !!! ÏÐÈÂÈÄÅÍÈÅ ÍÀÏÀËÎ ÍÀ ÂÀÑ !!!\n\n";
		cout << "\t\t\t  !!! ÂÛ ÏÎÒÅÐßËÈ ÎÄÍÓ ÆÈÇÍÜ !!!\n\n\n";

		cout << "\t                *************  \t\t*************  \t\t*************  \n";
		cout << "\t                ****** ******  \t\t****** ******  \t\t*           ** \n";
		cout << "\t                ***** * *****  \t\t***** * *****  \t\t*  ******   ***\n";
		cout << "\t                **** *** ****  \t\t**** *** ****  \t\t* * ** ** * ***\n";
		cout << "\t                *** ***** ***  \t\t*** ***** ***  \t\t* *   *   * ***\n";
		cout << "\t    ******      ** ******* **  \t\t** ******* **  \t\t* * ,___, * ***\n";
		cout << "\t   * ** ** *    * **  ***** *  \t\t* **  ***** *  \t\t* *       * ***\n";
		cout << "\t   *   *   *    ** ******* **  \t\t** ******* **  \t\t*   *****   ***\n";
		cout << "\t   * ,__, *     *** ***** ***  \t\t*** ***** ***  \t\t*    ***    ***\n";
		cout << "\t     ****       **** *** ****  \t\t**** *** ****  \t\t*      *    ***\n";
		cout << "\t    * ** *      ***** * *****  \t\t***** * *****  \t\t*       *   ***\n";
		cout << "\t   *  **  *     ****** ******  \t\t****** ******  \t\t*           ***\n";
		cout << "\t     *  *       *************  \t\t*************  \t\t***************\n";
		cout << "\t    *    *                     \t\t               \t\t             **\n";
		cout << "\t                      1.       \t\t      2.       \t\t      3.      *\n";

		cout << "\n\n";

	}

	void LeftDoorUser()
	{

		cout << "\n\n";

		cout << "\t\t\tÏÎÇÄÐÀÂËßÅÌ !!! ÏÐÈÂÈÄÅÍÈÅ ÂÀÑ ÍÅ ÍÀØËÎ !!!\n\n";
		cout << "\t\t\t   ÂÛ ÏÅÐÅÕÎÄÈÒÅ ÍÀ ÑËÅÄÓÞÙÈÉ ÝÒÀÆ !!!\n\n\n";

		cout << "\t                *************  \t\t*************  \t\t*************  \n";
		cout << "\t                *           ** \t\t****** ******  \t\t****** ******  \n";
		cout << "\t                *           ***\t\t***** * *****  \t\t***** * *****  \n";
		cout << "\t                *           ***\t\t**** *** ****  \t\t**** *** ****  \n";
		cout << "\t                *           ***\t\t*** ***** ***  \t\t*** ***** ***  \n";
		cout << "\t    ******      *           ***\t\t** ******* **  \t\t** ******* **  \n";
		cout << "\t   * ** ** *    *           ***\t\t* **  ***** *  \t\t* **  ***** *  \n";
		cout << "\t   *   *   *    *           ***\t\t** ******* **  \t\t** ******* **  \n";
		cout << "\t   * ,__, *     *           ***\t\t*** ***** ***  \t\t*** ***** ***  \n";
		cout << "\t     ****       *           ***\t\t**** *** ****  \t\t**** *** ****  \n";
		cout << "\t    * ** *      *           ***\t\t***** * *****  \t\t***** * *****  \n";
		cout << "\t   *  **  *     *           ***\t\t****** ******  \t\t****** ******  \n";
		cout << "\t     *  *       ***************\t\t*************  \t\t*************  \n";
		cout << "\t    *    *                   **\t\t               \t\t               \n";
		cout << "\t                      1.      *\t\t      2.       \t\t      3.       \n";

		cout << "\n\n";

	}

	void MiddleDoorUser()
	{

		cout << "\n\n";

		cout << "\t\t\tÏÎÇÄÐÀÂËßÅÌ !!! ÏÐÈÂÈÄÅÍÈÅ ÂÀÑ ÍÅ ÍÀØËÎ !!!\n\n";
		cout << "\t\t\t   ÂÛ ÏÅÐÅÕÎÄÈÒÅ ÍÀ ÑËÅÄÓÞÙÈÉ ÝÒÀÆ !!!\n\n\n";

		cout << "\t                *************  \t\t*************  \t\t*************  \n";
		cout << "\t                ****** ******  \t\t*           ** \t\t****** ******  \n";
		cout << "\t                ***** * *****  \t\t*           ***\t\t***** * *****  \n";
		cout << "\t                **** *** ****  \t\t*           ***\t\t**** *** ****  \n";
		cout << "\t                *** ***** ***  \t\t*           ***\t\t*** ***** ***  \n";
		cout << "\t    ******      ** ******* **  \t\t*           ***\t\t** ******* **  \n";
		cout << "\t   * ** ** *    * **  ***** *  \t\t*           ***\t\t* **  ***** *  \n";
		cout << "\t   *   *   *    ** ******* **  \t\t*           ***\t\t** ******* **  \n";
		cout << "\t   * ,__, *     *** ***** ***  \t\t*           ***\t\t*** ***** ***  \n";
		cout << "\t     ****       **** *** ****  \t\t*           ***\t\t**** *** ****  \n";
		cout << "\t    * ** *      ***** * *****  \t\t*           ***\t\t***** * *****  \n";
		cout << "\t   *  **  *     ****** ******  \t\t*           ***\t\t****** ******  \n";
		cout << "\t     *  *       *************  \t\t***************\t\t*************  \n";
		cout << "\t    *    *                     \t\t             **\t\t               \n";
		cout << "\t                      1.       \t\t      2.      *\t\t      3.       \n";

		cout << "\n\n";

	}

	void RightDoorUser()
	{

		cout << "\n\n";

		cout << "\t\t\tÏÎÇÄÐÀÂËßÅÌ !!! ÏÐÈÂÈÄÅÍÈÅ ÂÀÑ ÍÅ ÍÀØËÎ !!!\n\n";
		cout << "\t\t\t   ÂÛ ÏÅÐÅÕÎÄÈÒÅ ÍÀ ÑËÅÄÓÞÙÈÉ ÝÒÀÆ !!!\n\n\n";

		cout << "\t                *************  \t\t*************  \t\t*************  \n";
		cout << "\t                ****** ******  \t\t****** ******  \t\t*           ** \n";
		cout << "\t                ***** * *****  \t\t***** * *****  \t\t*           ***\n";
		cout << "\t                **** *** ****  \t\t**** *** ****  \t\t*           ***\n";
		cout << "\t                *** ***** ***  \t\t*** ***** ***  \t\t*           ***\n";
		cout << "\t    ******      ** ******* **  \t\t** ******* **  \t\t*           ***\n";
		cout << "\t   * ** ** *    * **  ***** *  \t\t* **  ***** *  \t\t*           ***\n";
		cout << "\t   *   *   *    ** ******* **  \t\t** ******* **  \t\t*           ***\n";
		cout << "\t   * ,__, *     *** ***** ***  \t\t*** ***** ***  \t\t*           ***\n";
		cout << "\t     ****       **** *** ****  \t\t**** *** ****  \t\t*           ***\n";
		cout << "\t    * ** *      ***** * *****  \t\t***** * *****  \t\t*           ***\n";
		cout << "\t   *  **  *     ****** ******  \t\t****** ******  \t\t*           ***\n";
		cout << "\t     *  *       *************  \t\t*************  \t\t***************\n";
		cout << "\t    *    *                     \t\t               \t\t             **\n";
		cout << "\t                      1.       \t\t      2.       \t\t      3.      *\n";

		cout << "\n\n";

	}

	void Win()
	{

		cout << "\n";
				
		cout << "\t\t                  ***  ***      \n";
		cout << "\t\t                 **********     \n";
		cout << "\t\t                  ********                     \n";
		cout << "\t\t                   ******                      \n";
		cout << "\t\t                     **         *  **  *      \n";
		cout << "\t\t    ******                       ******       \n";
		cout << "\t\t   * ** ** *                    * ** ** *    \n";
		cout << "\t\t   *   *   *                    *   *   *    \n";
		cout << "\t\t   * ,__, *                     *  ***  *     \n";
		cout << "\t\t     ****                         *****      \n";
		cout << "\t\t    * ** *                       * ** *      \n";
		cout << "\t\t   *  **  *                     *  **  *     \n";
		cout << "\t\t     *  *                         ****       \n";
		cout << "\t\t    *    *                       ******      \n";
		cout << "\t\t                                   * *    \n";

		cout << "\n\n";

	}

	void Loss()
	{
		cout << "\n\n";
		
		cout << "\t\t             ÕÀ - ÕÀ -ÕÀ !!!    \n";
		cout << "\t\t                                                                  \n";
		cout << "\t\t       *                       ******    \n";
		cout << "\t\t      **                      * ** ** *  \n";
		cout << "\t\t     ****                     *   *   *  \n";
		cout << "\t\t    ******                    * ,___, *  \n";
		cout << "\t\t   * ** ** *                  *       *  \n";
		cout << "\t\t   *   *   *                    *****    \n";
		cout << "\t\t   * **-** *                      ***     \n";
		cout << "\t\t     ****    *                      *     \n";
		cout << "\t\t    * ** *  *                        *    \n";
		cout << "\t\t   ** ** **                  \n";
		cout << "\t\t     ****        \n";
		cout << "\t\t    *    *                    \n\n";
		cout << "\t\t EVIL  WIZARD                            \n";

		cout << "\n\n\n";

	}
